tapply(testFin$Gross.domestic.product.2012,testFin$Income.Group, mean)
testFin$Gross.domestic.product.2012
testFin$Gross.domestic.product.2012 <- as.double(testFin$Gross.domestic.product.2012)
tapply(testFin$Gross.domestic.product.2012,testFin$Income.Group, mean)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
testFin$groupRank <- cut2(testFin$Gross.domestic.product.2012,g=5)
table(testFin$groupRank)
table(testFin$groupRank, testFin$Income.Group)
data <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
colNames <- names(data)
strsplit(colNames, split = "wgtp")
splitNames <- strsplit(colNames, split = "wgtp")
splitNames[[123]]
data <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
data <- data[5:195, c(1,2,4,5)]
names(data)
data$X.2
data$X.3
data$X.3 <- as.numeric(gsub(",","",data$X.3))
mean(data$X.3)
data$X.3
mean(data$X.3, na.rm = TRUE)
grep("^United",data$X.3)
grep("^United",data$X.3)
grep("^United",data$X.2)
grep("^United",data$X.2, values = TRUE)
df1 <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", stringsAsFactors = FALSE)
df2 <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", stringsAsFactors = FALSE)
df1 <- df1[5:195,]
test <- merge(df1, df2, by.x = "X", by.y = "CountryCode", all = FALSE)
grep("Fiscal year end: June",test$Special.Notes)
valuation <- grep("Fiscal year end: June",test$Special.Notes)
length(valuation)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
valuation <- grep("2012",sampleTimes)
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality, pch = 8,col = "red",  main = "Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone~Wind | (Month), data = airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone ~ Wind, airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout = c(2,1)
)
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = T)
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonts$color)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat|color*cut,strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat|color*cut,data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat|color*cut,data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(),10)
pal <- colorRamp(c("red", "blue"))
pal()
pal(0)
pal(1)
pal(seq(0,1, len = 6))
pal <- colorRampPalette(c("red", "blue"))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
p1 <- colorRampPalette(c("red", "yellow"))
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p1 <- colorRampPalette(c("blue", "green"))
p1 <- colorRampPalette(c("blue", "green"), alpha = 0.5)
p1 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x,y,pch = 19, col = rgb(0,0.5,0.5))
plot(x,y,pch = 19, col = rgb(0,0.5,0.5,0.3))
cols <- bewer.pal(3,"BuGn")
cols <- brewer.pal(3,"BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano,col = pal(20))
image(volcano,col = p1(20))
str(mpg)
qplot(displ, hyw, mpg))
qplot(displ, hyw, mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy,data =  mpg)
qplot(displ, hwy,data =  mpg, col = drv)
qplot(displ, hwy,data =  mpg, color = drv)
qplot(displ, hwy,data =  mpg, color = drv, geom = c("point", "smooth"))
qplot(y =hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg , facets = .~drv)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
h
g
summary(g)
print(g)
g + geom_point()
g + geom_point() + geom_smooth(
)
g + geom_point() + geom_smooth(method = lm)
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_point(3, color = "pink", size = 4, a;pha  = 1/2)
g + geom_point(3, color = "pink", size = 4, alpha  = 1/2)
g + geom_point(3, color = "pink", size = "4", alpha  = "1/2")
g + geom_point(3, color = "pink", size = 4, a;pha  = 1/2
g + geom_point(3, aes(color = "pink", size = 4, alpha  = 1/2))
g + geom_point(3, color = "pink", size = 4, alpha  = 1/2)
?geom_point
g + geom_point(3, colour = "pink", size = 4, alpha  = 1/2)
g + geom_point(3, aes(colour = "pink", size = 4, alpha  = 1/2)
)
g + geom_point(colour = "pink", size = 4, alpha  = 1/2)
g + geom_point(color = "pink", size = 4, alpha  = 1/2)
g + geom_point(size = 4, alpha  = 1/2, aes(color = drv))
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hyw Mileage")
g + geom_point(aes(color = drv))
| + labs(title="Swirl Rules!") +
| labs(x="Displacement", y="Hwy
| Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(size = 2, alpha  = 1/2, aes(color = drv)) + geom_smooth(size =4 , linetype = 3, method = "lm")
g + geom_point(aes(color = drv),size = 2, alpha  = 1/2) + geom_smooth(size =4 , linetype = 3, method = "lm")
g + geom_point(aes(color = drv),size = 2, alpha  = 1/2) + geom_smooth(size =4 , linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type="l", ylim = c(-3,3))
g <- ggplot(testdat, aes(myx, myy))
g + geom_line(0)
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(data = testdat, aes(x = displ, y = hwy, color = factor(year)))
g <- ggplot(data = mpg, aes(x = displ, y = hwy, color = factor(year)))
g
g + geom_line()
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = black)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y ="Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut, facets = .~cut) + geom_smooth(method = "lm")
g <- ggplot(data = diamonds, aes(depth, price))
g
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length = 4),  na.rm = TRUE)
cutpoints
diaamonds$car2 <- cut(diamonds$carat, cutpoints)
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(data = diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut~car2) + geom_smooth(method = "lm", size= 3, color ="pink")
ggplot(data = diamonds, aes(carat,price)) + geom_boxplot() + facet_grid(.~cut)
?treillis.par.set
??treillis.par.set
splom()
?splom()
?par
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
siwrl()
library(sriwl)
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
plot(hc)
abline(h = 1.5, col ="blue")
abline(h = 4, col ="red")
abline(h = .4, col ="red")
5
12
abline(h = .05, col ="green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
plot(cx, cy, col = c("red", "orange", and "purple"), pch = 3, cex = 2, lwd = 2)
plot(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x,y cx,cy)
mdist(x,y cx,cy)
mdist(x,y,cx,cy)
apply(distTmp, 2, which,which.min)
apply(distTmp, 2, which.min)
points(x,y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(cx, cy, col = cols1, pch = 8, cex = 2, lwd = 2)
points(newCx,newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x,y,newCx,newCy)
apply(distTmp2, 2, which.min)
points(x,y, pch = 19, cex = 2, col = cols1[newClust])
points(x,y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(y, newClust2, mean)
tapply(y, newClust2, mean)
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx,finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y, col = kmObj$cluster, pch = 19, cex =2)
points(kmObj$centers, col = c("black","red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x,y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex =2)
plot(x,y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex =2)
plot(x,y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex =2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %u% t(matv)
matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,2]
svd2$v[,1:2]
svd2$d
dim(faceData)
dim(faceData) <-
()
dim(faceData) <- svd1$u[,1]
a1 <- svd1$u[,1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a1 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a1 <- (svd1$u[,1:2] * daig(svd1$d[1:2])) %*% t(svd1$v[,1:2])
a1 <- (svd1$u[,1:2] * diag(svd1$d[1:2])) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
a10 <- svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10])
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd)[562:563]
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject =  1)
sub1 <- subset(ssd, subject ==  1)
dim(sub1)
names(sub1)
names(sub1[1:12])
medit("showXY.R")
myedit("showXY.R")
showMe(1:6)
mdist <- sub1[,1:3]
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplotclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- sub1[,10:12]
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon  <- which.max(svd$v[,2])
maxCon  <- which.max(svd1$v[,2])
mdist <- dist(cbind(sub1[,10:12],maxCon))
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
maxCon
sub1[maxCon]
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562:563)])
kClust <- kmeans(sub1[,-c(562:563)], centers = 6)
table(kmObj$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562:563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying,1:12], pch  = 19, ylab = "Laying Cluster")
names(sub1[1:3])
laying <- which(kClust$size == 49)
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12], pch  = 19, ylab = "Walkdown Cluster")
?unique
source('C:/Users/Ashwin/Downloads/exdata/data/NEI_data/plot4.R')
setwd("../../../Users/Ashwin/Downloads/exdata/data/NEI_data/")
source('C:/Users/Ashwin/Downloads/exdata/data/NEI_data/readData.R')
# Extract Baltimore Data
NEIBaltimore <- subset(NEI, fips == "24510")
library(dplyr)
head(NEIBaltimore)
NEIBaltimore %>% group_by( type, year )
NEIBaltimore %>% group_by( type, year ) %>% (summuary = sum(Emissions))
NEIBaltimore %>% group_by( type, year ) %>% summarize(sumary = sum(Emissions))
library(ggplot2)
?qplot
newTB <- NEIBaltimore %>% group_by( type, year ) %>% summarize(sumary = sum(Emissions))
qplot(year, summary, data = newTB, facets = .~type)
head(newTB)
qplot(year, sumary, data = newTB, facets = .~type)
names(newTB)[3] <- "summary"
names(newTB)
head(newTB)
qplot(year, sumary, data = newTB, facets = .~type, geom = c("lint"))
qplot(year, sumary, data = newTB, facets = .~type, geom = c("line"))
qplot(year, summary, data = newTB, facets = .~type, geom = c("line"))
qplot(year, summary, data = newTB, facets = .~type, geom = c("line"), xlab = "Year", ylab = "Emission")
qplot(year, summary, data = newTB, facets = .~type, geom = c("line"), xlab = "Year", ylab = "Emission", main = "Plot 3: Emission in Baltimore for 4 years for each source")
install.packages("dplyr")
install.packages("dplyr")
require("plyr")
require("dplyr")
if("dplyr" %in% rownames(installed.packages()) == FALSE) {install.packages("dplyr")}
remove.packages(dplyr)
remove.packages("dplyr")
if("dplyr" %in% rownames(installed.packages()) == FALSE) {install.packages("dplyr")}
"dplyr" %in% installed.packages()
remove.packages("dplyr")
new2TB <- NEIBaltimore %>% group_by( type, year ) %>% summarize(sumary = sum(Emissions))
if("dplyr" %in% rownames(installed.packages()) == FALSE) {install.packages("dplyr")}
new2TB <- NEIBaltimore %>% group_by( type, year ) %>% summarize(sumary = sum(Emissions))
head(NEIBaltimore)
new2TB <- NEIBaltimore %>% group_by( type, year ) %>% summarize(summary = sum(Emissions))
head(new2TB)
library(dplyr)
new2TB <- NEIBaltimore %>% group_by( type, year ) %>% summarize(summary = sum(Emissions))
new2TB <- NEIBaltimore %>% group_by( type, year ) %>% summarize(summaryVal = sum(Emissions))
new1TB <- NEIBaltimore %>% group_by( type, year ) %>% summarize(sumary = sum(Emissions))
new1TB <- NEIBaltimore %>% group_by( type, year )
head(new1TB)
new1TB <- NEIBaltimore %>% group_by( type, year ) %>% summarize(sumary = sum(Emissions))
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(dplyr)
if("dplyr" %in% rownames(installed.packages()) == FALSE) {install.packages("dplyr")}
library(dplyr)
new1TB <- NEIBaltimore %>% group_by( type, year ) %>% summarize(sumary = sum(Emissions))
if("ggplot2" %in% rownames(installed.packages()) == FALSE) {install.packages("ggplot2")}
library(ggplot2)
source('C:/Users/Ashwin/Downloads/exdata/data/NEI_data/plot3.R')
qplot(year, summary, data = newTB, facets = .~type, geom = c("line"), xlab = "Year", ylab = "Emission", main = "Plot 3: Emission in Baltimore for 4 years for each source")
source('C:/Users/Ashwin/Downloads/exdata/data/NEI_data/plot3.R')
source('C:/Users/Ashwin/Downloads/exdata/data/NEI_data/saveImage.R')
myplot(3)
head(SCC)
names(SCC)
head(SCC$Data.Category)
head(SCC$EI.Sector)
head(SCC$Option.Group)
str(SCC$Option.Group)
head(SCC$Map.To
)
head(SCC$Map.To,n = 20)
head(SCC$Option.Set,n = 20)
head(SCC$Option.Group,n = 20)
head(SCC$Usage.Notes,n = 20)
View(SCC)
str(SCC$SCC.Level.One)
head(SCC$SCC.Level.One)
levels(SCC$SCC.Level.One)
levels(SCC$SCC.Level.Two)
levels(SCC$SCC.Level.Three)
head(NEI)
str(NEI)
str(SCC
)
levels(SCC$Data.Category)
levels(SCC$SCC.Level.One)
levels(SCC$SCC.Level.Two)
levels(SCC$SCC.Level.Three)
levels(SCC$SCC.Level.Four)
"Coal" %in% levels(SCC$SCC.Level.Four)
grep("Coal*", levels(SCC$SCC.Level.Four), ignore.case = TRUE)
levels(SCC$SCC.Level.Four)[grep("Coal*", levels(SCC$SCC.Level.Four), ignore.case =] TRUE)
levels(SCC$SCC.Level.Four)[grep("Coal*", levels(SCC$SCC.Level.Four), ignore.case = TRUE)]
?grep
levels(SCC$SCC.Level.Four)[grep("Coal", levels(SCC$SCC.Level.Four), ignore.case = TRUE)]
grep("Vehicle",SCC$EI.Sector, ignore.case = TRUE)
SCC[grep("Vehicle",SCC$EI.Sector, ignore.case = TRUE),]
sub <- SCC[grep("Vehicle",SCC$EI.Sector, ignore.case = TRUE),]
val <- sub$SCC
inds <- which(val %in% NEIBaltimore$SCC)
dim(NEIBaltimore)
length(inds)
NEIBaltimoreMotor <- NEIBaltimore[inds,]
summary(val)
class(val)
levels(val)
summary(NEIBaltimoreMotor)
emissions <- tapply(X = NEIBaltimoreMotor$Emissions, INDEX =  NEIBaltimoreMotor$year, sum, na.rm = TRUE)
head(emissions)
class(SCC$EI.Sector)
levels(SCC$EI.Sector)
levels(sub$EI.Sector)
grep("Vehicle",SCC$EI.Sector, ignore.case = TRUE)
SCC$EI.Sector[grep("Vehicle",SCC$EI.Sector, ignore.case = TRUE)]
val2 <- SCC$EI.Sector[grep("Vehicle",SCC$EI.Sector, ignore.case = TRUE)]
str(val2)
val2 <- SCC$EI.Sector[grep("Vehicle",as.character(SCC$EI.Sector), ignore.case = TRUE)]
str(val2)
head(val2)
tail(val2)
levels(val2)
sub[sub$SCC =="Waste Disposal",]
sub[sub$SCC =="Mobile - On-Road Gasoline Light Duty Vehicles",]
sub[sub$EI.Sector =="Mobile - On-Road Gasoline Light Duty Vehicles",]
sample <- sub[sub$EI.Sector =="Mobile - On-Road Gasoline Light Duty Vehicles",]
sample <- sub[sub$EI.Sector =="Waste Disposal",]
"Waste Disposal" %in% sub$EI.Sector
"Mobile - On-Road Gasoline Light Duty Vehicles" %in% sub$EI.Sector
levels(sub$EI.Sector)
"Mobile - On-Road Gasoline Heavy Duty Vehicles" %in% sub$EI.Sector
table(sub$EI.Sector)
table(SCC$EI.Sector)
head(NEIBaltimoreMotor)
ut <- intersect(NEIBaltimoreMotor$SCC, val)
unique(NEIBaltimoreMotor$SCC)
length(unique(NEIBaltimoreMotor$SCC))
length(unique(sub$SCC))
length(unique(NEIBaltimore$SCC))
table(sub$EI.Sector)
sum(table(sub$EI.Sector))
head(val)
inds <- which(NEIBaltimore$SCC %in% val)
NEIBaltimoreMotor <- NEIBaltimore[inds,]
length(inds)
intersect(val, NEIBaltimore$SCC)
length(intersect(val, NEIBaltimore$SCC))
unique(NEIBaltimoreMotor$SCC)
length(unique(NEIBaltimoreMotor$SCC))
emissions <- tapply(X = NEIBaltimoreMotor$Emissions, INDEX =  NEIBaltimoreMotor$year, sum, na.rm = TRUE)
emissions
source('C:/Users/Ashwin/Downloads/exdata/data/NEI_data/plot4.R')
emissions
source('C:/Users/Ashwin/Downloads/exdata/data/NEI_data/plot4.R')
source('C:/Users/Ashwin/Downloads/exdata/data/NEI_data/plot5.R')
myplot(5)
source('C:/Users/Ashwin/Downloads/exdata/data/NEI_data/plot6.R')
source('C:/Users/Ashwin/Downloads/exdata/data/NEI_data/plot6.R')
source('C:/Users/Ashwin/Downloads/exdata/data/NEI_data/plot6.R')
par()
source('C:/Users/Ashwin/Downloads/exdata/data/NEI_data/plot6.R')
source('C:/Users/Ashwin/Downloads/exdata/data/NEI_data/plot6.R')
source('C:/Users/Ashwin/Downloads/exdata/data/NEI_data/plot6.R')
